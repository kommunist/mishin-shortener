// Code generated by MockGen. DO NOT EDIT.
// Source: mishin-shortener/internal/handlers/userurls (interfaces: ByUserIDGetter)

// Package userurls is a generated GoMock package.
package userurls

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockByUserIDGetter is a mock of ByUserIDGetter interface.
type MockByUserIDGetter struct {
	ctrl     *gomock.Controller
	recorder *MockByUserIDGetterMockRecorder
}

// MockByUserIDGetterMockRecorder is the mock recorder for MockByUserIDGetter.
type MockByUserIDGetterMockRecorder struct {
	mock *MockByUserIDGetter
}

// NewMockByUserIDGetter creates a new mock instance.
func NewMockByUserIDGetter(ctrl *gomock.Controller) *MockByUserIDGetter {
	mock := &MockByUserIDGetter{ctrl: ctrl}
	mock.recorder = &MockByUserIDGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockByUserIDGetter) EXPECT() *MockByUserIDGetterMockRecorder {
	return m.recorder
}

// GetByUserID mocks base method.
func (m *MockByUserIDGetter) GetByUserID(arg0 context.Context, arg1 string) (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByUserID", arg0, arg1)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByUserID indicates an expected call of GetByUserID.
func (mr *MockByUserIDGetterMockRecorder) GetByUserID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByUserID", reflect.TypeOf((*MockByUserIDGetter)(nil).GetByUserID), arg0, arg1)
}
