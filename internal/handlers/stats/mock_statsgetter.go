// Code generated by MockGen. DO NOT EDIT.
// Source: mishin-shortener/internal/handlers/stats (interfaces: StatsGetter)

// Package stats is a generated GoMock package.
package stats

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStatsGetter is a mock of StatsGetter interface.
type MockStatsGetter struct {
	ctrl     *gomock.Controller
	recorder *MockStatsGetterMockRecorder
}

// MockStatsGetterMockRecorder is the mock recorder for MockStatsGetter.
type MockStatsGetterMockRecorder struct {
	mock *MockStatsGetter
}

// NewMockStatsGetter creates a new mock instance.
func NewMockStatsGetter(ctrl *gomock.Controller) *MockStatsGetter {
	mock := &MockStatsGetter{ctrl: ctrl}
	mock.recorder = &MockStatsGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatsGetter) EXPECT() *MockStatsGetterMockRecorder {
	return m.recorder
}

// GetStats mocks base method.
func (m *MockStatsGetter) GetStats(arg0 context.Context) (int, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStats", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetStats indicates an expected call of GetStats.
func (mr *MockStatsGetterMockRecorder) GetStats(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStats", reflect.TypeOf((*MockStatsGetter)(nil).GetStats), arg0)
}
