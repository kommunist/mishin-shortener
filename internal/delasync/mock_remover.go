// Code generated by MockGen. DO NOT EDIT.
// Source: mishin-shortener/internal/delasync (interfaces: Remover)

// Package delasync is a generated GoMock package.
package delasync

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRemover is a mock of Remover interface.
type MockRemover struct {
	ctrl     *gomock.Controller
	recorder *MockRemoverMockRecorder
}

// MockRemoverMockRecorder is the mock recorder for MockRemover.
type MockRemoverMockRecorder struct {
	mock *MockRemover
}

// NewMockRemover creates a new mock instance.
func NewMockRemover(ctrl *gomock.Controller) *MockRemover {
	mock := &MockRemover{ctrl: ctrl}
	mock.recorder = &MockRemoverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRemover) EXPECT() *MockRemoverMockRecorder {
	return m.recorder
}

// DeleteByUserID mocks base method.
func (m *MockRemover) DeleteByUserID(arg0 context.Context, arg1 []DelPair) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteByUserID", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteByUserID indicates an expected call of DeleteByUserID.
func (mr *MockRemoverMockRecorder) DeleteByUserID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteByUserID", reflect.TypeOf((*MockRemover)(nil).DeleteByUserID), arg0, arg1)
}
